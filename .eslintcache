[{"D:\\reactproject\\myreactapp\\src\\index.js":"1","D:\\reactproject\\myreactapp\\src\\reportWebVitals.js":"2","D:\\reactproject\\myreactapp\\src\\App.js":"3","D:\\reactproject\\myreactapp\\src\\serviceWorker.js":"4","D:\\reactproject\\myreactapp\\src\\store.js":"5","D:\\reactproject\\myreactapp\\src\\Cart.js":"6","D:\\reactproject\\myreactapp\\src\\Checkout.js":"7","D:\\reactproject\\myreactapp\\src\\Book.js":"8","D:\\reactproject\\myreactapp\\src\\Reducer.js":"9","D:\\reactproject\\myreactapp\\src\\Action.js":"10","D:\\reactproject\\myreactapp\\src\\Constant.js":"11"},{"size":459,"mtime":1611434330042,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":635,"mtime":1611414172000,"results":"15","hashOfConfig":"13"},{"size":4951,"mtime":1611414172000,"results":"16","hashOfConfig":"13"},{"size":144,"mtime":1611414172000,"results":"17","hashOfConfig":"13"},{"size":5666,"mtime":1611462658368,"results":"18","hashOfConfig":"13"},{"size":11449,"mtime":1611487976618,"results":"19","hashOfConfig":"13"},{"size":8453,"mtime":1611473772619,"results":"20","hashOfConfig":"13"},{"size":1439,"mtime":1611487369854,"results":"21","hashOfConfig":"13"},{"size":597,"mtime":1611459756281,"results":"22","hashOfConfig":"13"},{"size":267,"mtime":1611459813843,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"178fqw7",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\reactproject\\myreactapp\\src\\index.js",[],["51","52"],"D:\\reactproject\\myreactapp\\src\\reportWebVitals.js",[],["53","54"],"D:\\reactproject\\myreactapp\\src\\App.js",["55","56"],"import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Cart from \"./Cart\";\nimport Book from \"./Book\";\nimport Checkout from \"./Checkout\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Book} />\n            <Route exact path=\"/cartlist\" component={Cart} />\n            <Route exact path=\"/Checkout\" component={Checkout} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","D:\\reactproject\\myreactapp\\src\\serviceWorker.js",[],"D:\\reactproject\\myreactapp\\src\\store.js",[],"D:\\reactproject\\myreactapp\\src\\Cart.js",["57","58","59"],"import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { cartselectedlist, removecartselectedlist, totalPrize,checkoutselectedlist } from \"./Action\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    cartselectedlist: book => dispatch(cartselectedlist(book)),\r\n    removecartselectedlist: book => dispatch(removecartselectedlist(book)),\r\n    checkoutselectedlist: book => dispatch(checkoutselectedlist(book)),\r\n    totalPrize: book => dispatch(totalPrize(book))\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(\"redux state\");\r\n  console.log(state);\r\n  return { cartselectedList: state.cartselectedList, totalAmount: state.prize };\r\n}\r\n\r\nclass Cart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"sdfsdfdfdssdfdddddddddddddddddddddddd\");\r\n    console.log(props);\r\n    this.state = {\r\n      cartList: props.cartselectedList,\r\n      selectedList: [],\r\n      total: 0\r\n    };\r\n  }\r\n\r\n  Back = () => {\r\n    \r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  Checkout =()=>{\r\n\r\n    const booksselected=this.state.selectedList;\r\n    \r\n    this.props.checkoutselectedlist({booksselected});\r\n    \r\n    this.props.history.push(\"/Checkout\");\r\n\r\n  }\r\n\r\n  addPrice = () => {\r\n    let totalprice = 0;\r\n\r\n    this.state.selectedList.map(value => {\r\n      totalprice = totalprice + value.price;\r\n    });\r\n\r\n    this.props.totalPrize({ totalprice });\r\n    \r\n  };\r\n  removeItems = event => {\r\n    const booksselected = JSON.parse(\r\n      event.currentTarget.attributes[\"removeval\"].value\r\n    );\r\n    this.props.removecartselectedlist({ booksselected });\r\n    this.props.totalPrize(0);\r\n    this.setState(\r\n      {\r\n        selectedList: []\r\n      },\r\n      function() {\r\n        console.log(\"cleared\");\r\n      }\r\n    );\r\n    document\r\n      .querySelectorAll(\"input[type=checkbox]\")\r\n      .forEach(el => (el.checked = false));\r\n  };\r\n\r\n  myClick = event => {\r\n   \r\n    \r\n    console.log(this.state.selectedList);\r\n\r\n    if (event.target.checked) {\r\n      const value = event.currentTarget.attributes[\"def\"].value;\r\n\r\n      this.setState(\r\n        prevState => ({\r\n          selectedList: [...prevState.selectedList, JSON.parse(value)]\r\n        }),\r\n        function() {\r\n          this.addPrice();\r\n        }\r\n      );\r\n      \r\n    } else {\r\n      const value = JSON.parse(event.currentTarget.attributes[\"def\"].value);\r\n\r\n      this.setState(\r\n        {\r\n          selectedList: this.state.selectedList.filter(person => {\r\n            return person.bookID !== value.bookID;\r\n          })\r\n        },\r\n        function() {\r\n          this.addPrice();\r\n        }\r\n      );\r\n\r\n      \r\n    }\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"container App\">\r\n        <h4 style={{ \"text-align\": \"center\" }}>CartList Values</h4>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"clearfix\" />{\" \"}\r\n            <table id=\"example1\" className=\"table table-bordered table-striped\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th>Select</th>\r\n                  <th>Image</th>\r\n                  <th>TITLE</th>\r\n                  <th>AUTHOR</th>\r\n                  <th>PRICE</th>\r\n                  <th>AVERAGE RATING</th>\r\n                  <th>REMOVE</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.cartselectedList.map((x, i) => (\r\n                  <tr key={i}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        def={JSON.stringify(x)}\r\n                        onClick={e => this.myClick(e)}\r\n                      />\r\n                    </td>\r\n\r\n                    <td>\r\n                      <img src={x[\"Image\"]} width=\"20\" height=\"20\" />\r\n                    </td>\r\n\r\n                    <td>{x.title}</td>\r\n                    <td>{x.authors}</td>\r\n                    <td>{x.price}</td>\r\n                    <td>{x.average_rating}</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        value=\"Remove\"\r\n                        removeval={JSON.stringify(x)}\r\n                        onClick={e => this.removeItems(e)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <div />\r\n            {this.props.cartselectedList.length == 0 && (\r\n              <div style={{ \"text-align\": \"center\" }} className=\"container \">\r\n                <h1>\r\n                  {\" \"}\r\n                  <b> No data found to display.</b>\r\n                </h1>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.Back}\r\n            className=\"text-center btn btn-danger\"\r\n          >\r\n            Back\r\n          </button>{\" \"}\r\n          &nbsp;&nbsp;\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.Checkout}\r\n            className=\"text-center btn btn-success\"\r\n          >\r\n            Checkout\r\n          </button>{\" \"}\r\n          &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n          <b>Total Price</b>:\r\n          <b style={{ color: \"red\" }}>{this.props.totalAmount}</b>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Form = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cart);\r\nexport default withRouter(Form);\r\n","D:\\reactproject\\myreactapp\\src\\Checkout.js",["60","61","62"],"D:\\reactproject\\myreactapp\\src\\Book.js",["63","64","65","66"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { cartselectedlist, removecartselectedlist, totalPrize,bookcartdata } from \"./Action\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    bookcartdata: book => dispatch(bookcartdata(book)),\r\n    cartselectedlist: book => dispatch(cartselectedlist(book)),\r\n    removecartselectedlist: book => dispatch(removecartselectedlist(book)),\r\n    totalPrize: book => dispatch(totalPrize(book))\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state);\r\n  return { cartselectedList: state.cartselectedList, totalAmount: state.prize,bookcartdataall:state.bookcartdata };\r\n}\r\n\r\nclass Book extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userList: [],\r\n      userListfilter: [],\r\n      cartList: [],\r\n      asc: false,\r\n      prizeasc:false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var image = [];\r\n    if(this.props.bookcartdataall.length == 0){\r\n\r\n\r\n    await fetch(\r\n      \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({ userListfilter: res.slice(0, 3000) });\r\n      });\r\n\r\n    await fetch(\r\n      \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/bookimage816b123.json\"\r\n    )\r\n      .then(res1 => res1.json())\r\n      .then(res1 => {\r\n        image = res1;\r\n      });\r\n\r\n\r\n\r\n    let members = this.state.userListfilter.map(member => {\r\n      //let index = Math.floor(Math.random() * image.length);\r\n      return {\r\n        ...member,\r\n        Image: image[Math.floor(Math.random() * image.length)].Image\r\n      };\r\n    });\r\n\r\n    this.setState({ userList: members });\r\n    \r\n    this.props.bookcartdata({ members });\r\n  }\r\n  }\r\n\r\n  searchbytitle = event => {\r\n    const members = this.state.userList.filter(dat => {\r\n      return dat.title.toString().includes(event.target.value);\r\n    });\r\n\r\n    //this.setState({ userListfilter: filterdat });\r\n    this.props.bookcartdata({ members });\r\n  };\r\n  Addtocart = event => {\r\n    const candidateinfo = JSON.parse(\r\n      event.currentTarget.attributes[\"def2\"].value\r\n    );\r\n\r\n    const cartListval = this.props.cartselectedList;\r\n\r\n    if (cartListval.length > 0) {\r\n      const Filtereddata = cartListval.filter(\r\n        data => data.bookID == candidateinfo.bookID\r\n      );\r\n      if (Filtereddata.length > 0) {\r\n        alert(\"Already added in Cart\");\r\n      } else {\r\n        this.setState(\r\n          {\r\n            cartList: this.state.cartList.concat(candidateinfo)\r\n          },\r\n          function() {\r\n            const booksselected = candidateinfo;\r\n            this.props.cartselectedlist({ booksselected });\r\n          }\r\n        );\r\n        alert(\"Added Successfully into Cart\");\r\n      }\r\n    } else {\r\n      this.setState(\r\n        {\r\n          cartList: this.state.cartList.concat(candidateinfo)\r\n        },\r\n        function() {\r\n          const booksselected = candidateinfo;\r\n          this.props.cartselectedlist({ booksselected });\r\n        }\r\n      );\r\n      alert(\"Added Successfully into Cart\");\r\n    }\r\n  };\r\n\r\n  cartlist = () => {\r\n    this.props.totalPrize(0);\r\n    this.props.history.push(\"/cartlist\");\r\n  };\r\n\r\n  sorting = event => {\r\n    let members;\r\n    if (this.state.asc == false) {\r\n      \r\n      members = this.props.bookcartdataall.sort(function(a, b) {\r\n        if (Number(a.average_rating) < Number(b.average_rating)) return -1;\r\n        if (Number(a.average_rating) > Number(b.average_rating)) return 1;\r\n        return 0;\r\n      });\r\n      this.setState({ asc: true });\r\n    } else {\r\n      members = this.props.bookcartdataall.sort(function(a, b) {\r\n        if (Number(a.average_rating) < Number(b.average_rating)) return 1;\r\n        if (Number(a.average_rating) > Number(b.average_rating)) return -1;\r\n        return 0;\r\n      });\r\n      this.setState({ asc: false });\r\n    }\r\n\r\n    \r\n    this.props.bookcartdata({ members });\r\n  };\r\n\r\n  sortingprize = event => {\r\n    let members;\r\n    if (this.state.prizeasc == false) {\r\n      \r\n      members = this.props.bookcartdataall.sort(function(a, b) {\r\n        if (Number(a.price) < Number(b.price)) return -1;\r\n        if (Number(a.price) > Number(b.price)) return 1;\r\n        return 0;\r\n      });\r\n      this.setState({ prizeasc: true });\r\n    } else {\r\n      members = this.props.bookcartdataall.sort(function(a, b) {\r\n        if (Number(a.price) < Number(b.price)) return 1;\r\n        if (Number(a.price) > Number(b.price)) return -1;\r\n        return 0;\r\n      });\r\n      this.setState({ prizeasc: false });\r\n    }\r\n\r\n    \r\n    this.props.bookcartdata({ members });\r\n  };\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div className=\"container App\">\r\n        <div>\r\n          <h4 style={{ \"text-align\": \"center\" }}>Book Details</h4>\r\n          \r\n          <span >\r\n            <button className=\"btn btn-info\" style={{ \"float\": \"right\" }} onClick={this.cartlist}>\r\n              {\" \"}\r\n              <b> Cart Items:</b> {this.props.cartselectedList.length}\r\n            </button>\r\n          </span>\r\n        </div>\r\n        <div className=\"col-lg-12\" style={{ display: \"flex\" }}>\r\n          <div class=\"col-lg-6\">\r\n          <input\r\n            className=\"form-control \"\r\n            type=\"text\"\r\n            placeholder=\"Search with Title\"\r\n            onChange={e => this.searchbytitle(e)}\r\n            aria-label=\"Search\"\r\n          />\r\n          </div>{\" \"}\r\n          &nbsp;&nbsp;\r\n          <div class=\"col-lg-6\">\r\n          <span>\r\n            {/* <input\r\n              type=\"button\"\r\n              className=\"btn btn-success fa fa-filter\"\r\n              onClick={e => this.sorting(e)}\r\n              value=\"Sort\"\r\n            /> */}\r\n            <button className=\"btn btn-primary fa fa-filter\" onClick={e => this.sorting(e)} style={{\"fontSize\":\"24\",height:\"28\"}}>Sort by Rating <i className=\"\"></i></button>\r\n            {\" \"}\r\n          &nbsp;&nbsp;\r\n            <button className=\"btn btn-primary fa fa-filter\" onClick={e => this.sortingprize(e)} style={{\"fontSize\":\"24\",height:\"28\"}}>Sort by Prize<i className=\"\"></i></button>\r\n\r\n          </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {this.props.bookcartdataall.map(x => (\r\n              <div\r\n                className=\"card   mt-3 ml-4\"\r\n                def={JSON.stringify(x)}\r\n                style={{ align: \"center\" }}\r\n              >\r\n                <img\r\n                  src={x.Image}\r\n                  alt=\"Avatar\"\r\n                  style={{\r\n                    align: \"center\",\r\n                    borderColor: \"black\",\r\n                    backgroundColor: \"lightblue\",\r\n                    height:150\r\n                  }}\r\n                />\r\n\r\n                <div className=\"container\">\r\n                  <p>\r\n                    Price: <b>{x.price}</b>\r\n                  </p>\r\n                  <p>\r\n                    Title: <b>{x.title}</b>\r\n                  </p>\r\n                  <p>\r\n                    Author: <b>{x.authors}</b>\r\n                  </p>\r\n                  <p>\r\n                    AverageRating: <b>{x.average_rating}</b>\r\n                  </p>\r\n                  <p>\r\n                    RatingCount: <b>{x.ratings_count}</b>\r\n                  </p>\r\n                  <p>\r\n                    ISBN: <b>{x.isbn}</b>\r\n                  </p>\r\n                  \r\n    \r\n\r\n                  <p style={{\"verticalAlign\": \"bottom\"}}>\r\n                    <input\r\n                      type=\"button\"\r\n                      className=\"btn btn-success \"\r\n                      def2={JSON.stringify(x)}\r\n                      onClick={e => this.Addtocart(e)}\r\n                      style={{\"verticalAlign\": \"bottom\"}}\r\n                      value=\"Add to Cart\"\r\n                    />\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div class=\"text-center\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.cartlist}\r\n              className=\"btn btn-info\"\r\n            >\r\n              Cart List\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Form = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Book);\r\nexport default withRouter(Form);\r\n","D:\\reactproject\\myreactapp\\src\\Reducer.js",["67","68","69","70","71","72"],"D:\\reactproject\\myreactapp\\src\\Action.js",[],"D:\\reactproject\\myreactapp\\src\\Constant.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":6,"column":12,"nodeType":"81","messageId":"82","endLine":6,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":25,"column":12,"nodeType":"81","messageId":"82","endLine":25,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":54,"column":39,"nodeType":"86","messageId":"87","endLine":54,"endColumn":41},{"ruleId":"88","severity":1,"message":"89","line":148,"column":23,"nodeType":"90","endLine":148,"endColumn":70},{"ruleId":"91","severity":1,"message":"92","line":169,"column":49,"nodeType":"93","messageId":"94","endLine":169,"endColumn":51},{"ruleId":"79","severity":1,"message":"95","line":8,"column":63,"nodeType":"81","messageId":"82","endLine":8,"endColumn":83},{"ruleId":"91","severity":1,"message":"92","line":71,"column":28,"nodeType":"93","messageId":"94","endLine":71,"endColumn":30},{"ruleId":"91","severity":1,"message":"92","line":330,"column":40,"nodeType":"93","messageId":"94","endLine":330,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":35,"column":42,"nodeType":"93","messageId":"94","endLine":35,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":87,"column":29,"nodeType":"93","messageId":"94","endLine":87,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":124,"column":24,"nodeType":"93","messageId":"94","endLine":124,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":147,"column":29,"nodeType":"93","messageId":"94","endLine":147,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":12,"column":19,"nodeType":"93","messageId":"94","endLine":12,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":21,"column":19,"nodeType":"93","messageId":"94","endLine":21,"endColumn":21},{"ruleId":"79","severity":1,"message":"96","line":27,"column":9,"nodeType":"81","messageId":"82","endLine":27,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":35,"column":19,"nodeType":"93","messageId":"94","endLine":35,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":44,"column":19,"nodeType":"93","messageId":"94","endLine":44,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":51,"column":19,"nodeType":"93","messageId":"94","endLine":51,"endColumn":21},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'columns' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'checkoutselectedlist' is defined but never used.","'amount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]